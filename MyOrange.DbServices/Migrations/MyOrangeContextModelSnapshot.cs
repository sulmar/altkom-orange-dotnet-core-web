// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyOrange.DbServices;

namespace MyOrange.DbServices.Migrations
{
    [DbContext(typeof(MyOrangeContext))]
    partial class MyOrangeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyOrange.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MyOrange.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CONVERT(date, GETDATE())");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 0m,
                            Author = "Letitia Purdy",
                            CreatedOn = new DateTime(2019, 8, 28, 14, 35, 20, 29, DateTimeKind.Local).AddTicks(7793),
                            Description = "Et ex rerum aut rerum doloremque dolore voluptatem.",
                            DocumentType = "Pdf",
                            Size = 9899L,
                            Title = "granite.cif",
                            UpdatedOn = new DateTime(2020, 4, 24, 0, 20, 18, 947, DateTimeKind.Local).AddTicks(3217)
                        },
                        new
                        {
                            Id = 2,
                            Amount = 0m,
                            Author = "Hosea Padberg",
                            CreatedOn = new DateTime(2019, 8, 15, 8, 27, 46, 99, DateTimeKind.Local).AddTicks(1061),
                            Description = "Iste porro cumque perferendis doloribus aut vero veritatis sint cupiditate.",
                            DocumentType = "CSV",
                            Size = 2801L,
                            Title = "security_fantastic_soft_mouse_virtual.bmp",
                            UpdatedOn = new DateTime(2020, 4, 23, 21, 50, 43, 177, DateTimeKind.Local).AddTicks(9162)
                        },
                        new
                        {
                            Id = 3,
                            Amount = 0m,
                            Author = "Dakota Bradtke",
                            CreatedOn = new DateTime(2019, 6, 8, 17, 54, 28, 512, DateTimeKind.Local).AddTicks(2661),
                            Description = "Dicta aut corrupti rerum quae quia numquam dicta enim unde.",
                            DocumentType = "CSV",
                            Size = 3134L,
                            Title = "bedfordshire_back_end_incredible_metal_shirt.fcdt",
                            UpdatedOn = new DateTime(2020, 4, 23, 12, 0, 59, 890, DateTimeKind.Local).AddTicks(427)
                        },
                        new
                        {
                            Id = 4,
                            Amount = 0m,
                            Author = "Omari Borer",
                            CreatedOn = new DateTime(2019, 6, 23, 2, 27, 53, 631, DateTimeKind.Local).AddTicks(3289),
                            Description = "Rerum quia quos voluptatem veritatis totam ea iure quis.",
                            DocumentType = "Pdf",
                            Size = 175L,
                            Title = "ville.rpss",
                            UpdatedOn = new DateTime(2020, 4, 23, 10, 34, 8, 198, DateTimeKind.Local).AddTicks(8320)
                        },
                        new
                        {
                            Id = 5,
                            Amount = 0m,
                            Author = "Dexter Kessler",
                            CreatedOn = new DateTime(2020, 3, 30, 5, 38, 34, 548, DateTimeKind.Local).AddTicks(455),
                            Description = "Ullam quia consequuntur quis voluptatum consequatur.",
                            DocumentType = "Word",
                            Size = 5618L,
                            Title = "ssl.conf",
                            UpdatedOn = new DateTime(2020, 4, 24, 3, 6, 6, 592, DateTimeKind.Local).AddTicks(4333)
                        },
                        new
                        {
                            Id = 6,
                            Amount = 0m,
                            Author = "Bobbie Stamm",
                            CreatedOn = new DateTime(2019, 6, 27, 6, 30, 51, 667, DateTimeKind.Local).AddTicks(7941),
                            Description = "Ut est neque sit voluptatem magni architecto nostrum sed vitae.",
                            DocumentType = "Word",
                            Size = 9267L,
                            Title = "rustic_fresh_chips_website_invoice.z5",
                            UpdatedOn = new DateTime(2020, 4, 23, 7, 13, 23, 596, DateTimeKind.Local).AddTicks(209)
                        },
                        new
                        {
                            Id = 7,
                            Amount = 0m,
                            Author = "Fay Leuschke",
                            CreatedOn = new DateTime(2019, 8, 18, 8, 52, 6, 679, DateTimeKind.Local).AddTicks(7979),
                            Description = "Quidem labore doloremque similique et modi dolorum animi.",
                            DocumentType = "Pdf",
                            Size = 1889L,
                            Title = "senior_concept_microchip.buffer",
                            UpdatedOn = new DateTime(2020, 4, 23, 23, 35, 44, 67, DateTimeKind.Local).AddTicks(5737)
                        },
                        new
                        {
                            Id = 8,
                            Amount = 0m,
                            Author = "Geoffrey Ritchie",
                            CreatedOn = new DateTime(2019, 7, 28, 19, 0, 4, 332, DateTimeKind.Local).AddTicks(5122),
                            Description = "Dolorem cumque enim at officiis.",
                            DocumentType = "Word",
                            Size = 4774L,
                            Title = "facilitator.m4p",
                            UpdatedOn = new DateTime(2020, 4, 23, 11, 54, 53, 75, DateTimeKind.Local).AddTicks(7462)
                        },
                        new
                        {
                            Id = 9,
                            Amount = 0m,
                            Author = "Deshawn Wuckert",
                            CreatedOn = new DateTime(2019, 8, 17, 12, 42, 54, 314, DateTimeKind.Local).AddTicks(4963),
                            Description = "Eos corporis officiis facilis velit odio provident nisi autem aut.",
                            DocumentType = "Word",
                            Size = 3313L,
                            Title = "barbados_24_365_lead.mid",
                            UpdatedOn = new DateTime(2020, 4, 23, 11, 22, 4, 968, DateTimeKind.Local).AddTicks(8430)
                        },
                        new
                        {
                            Id = 10,
                            Amount = 0m,
                            Author = "Joyce Simonis",
                            CreatedOn = new DateTime(2020, 3, 19, 5, 31, 11, 262, DateTimeKind.Local).AddTicks(5734),
                            Description = "Atque qui eius odio temporibus quia ut aut voluptatem minima.",
                            DocumentType = "Excel",
                            Size = 9501L,
                            Title = "orchestrate.sig",
                            UpdatedOn = new DateTime(2020, 4, 23, 19, 14, 56, 490, DateTimeKind.Local).AddTicks(9539)
                        },
                        new
                        {
                            Id = 11,
                            Amount = 0m,
                            Author = "Jaylon O'Hara",
                            CreatedOn = new DateTime(2020, 4, 20, 19, 46, 39, 659, DateTimeKind.Local).AddTicks(5822),
                            Description = "Aut nobis qui ea veritatis excepturi.",
                            DocumentType = "Pdf",
                            Size = 8897L,
                            Title = "lights_factors_cultivate.mods",
                            UpdatedOn = new DateTime(2020, 4, 23, 22, 2, 2, 12, DateTimeKind.Local).AddTicks(5141)
                        },
                        new
                        {
                            Id = 12,
                            Amount = 0m,
                            Author = "Tressie Reichel",
                            CreatedOn = new DateTime(2020, 2, 29, 8, 20, 53, 157, DateTimeKind.Local).AddTicks(591),
                            Description = "Tempora animi autem dolor officia.",
                            DocumentType = "Pdf",
                            Size = 3351L,
                            Title = "money_market_account.xpw",
                            UpdatedOn = new DateTime(2020, 4, 23, 15, 22, 10, 327, DateTimeKind.Local).AddTicks(3119)
                        },
                        new
                        {
                            Id = 13,
                            Amount = 0m,
                            Author = "Jovanny Borer",
                            CreatedOn = new DateTime(2019, 7, 17, 12, 49, 11, 776, DateTimeKind.Local).AddTicks(5644),
                            Description = "Cum corrupti esse.",
                            DocumentType = "Excel",
                            Size = 6552L,
                            Title = "outdoors.acc",
                            UpdatedOn = new DateTime(2020, 4, 24, 5, 39, 36, 83, DateTimeKind.Local).AddTicks(513)
                        },
                        new
                        {
                            Id = 14,
                            Amount = 0m,
                            Author = "Jany Abernathy",
                            CreatedOn = new DateTime(2019, 9, 27, 8, 45, 49, 959, DateTimeKind.Local).AddTicks(2576),
                            Description = "Laborum dolores quia soluta ut cupiditate ex dicta.",
                            DocumentType = "Word",
                            Size = 2170L,
                            Title = "intelligent_granite_bacon.swi",
                            UpdatedOn = new DateTime(2020, 4, 24, 3, 3, 26, 667, DateTimeKind.Local).AddTicks(2995)
                        },
                        new
                        {
                            Id = 15,
                            Amount = 0m,
                            Author = "Jolie Huels",
                            CreatedOn = new DateTime(2020, 3, 13, 16, 20, 5, 544, DateTimeKind.Local).AddTicks(8581),
                            Description = "Omnis aut soluta qui eum ipsam expedita dolores non eligendi.",
                            DocumentType = "Excel",
                            Size = 9737L,
                            Title = "meadow.iota",
                            UpdatedOn = new DateTime(2020, 4, 23, 17, 59, 50, 954, DateTimeKind.Local).AddTicks(3621)
                        },
                        new
                        {
                            Id = 16,
                            Amount = 0m,
                            Author = "Yvonne Kunde",
                            CreatedOn = new DateTime(2019, 7, 20, 6, 54, 12, 209, DateTimeKind.Local).AddTicks(5508),
                            Description = "Adipisci necessitatibus ab dicta vero blanditiis est nostrum.",
                            DocumentType = "Word",
                            Size = 8822L,
                            Title = "manors_back_end_plastic.plf",
                            UpdatedOn = new DateTime(2020, 4, 23, 8, 48, 49, 634, DateTimeKind.Local).AddTicks(7747)
                        },
                        new
                        {
                            Id = 17,
                            Amount = 0m,
                            Author = "Lonzo Jones",
                            CreatedOn = new DateTime(2020, 1, 27, 15, 7, 45, 170, DateTimeKind.Local).AddTicks(5578),
                            Description = "Sapiente est enim consequatur consequatur autem temporibus.",
                            DocumentType = "Pdf",
                            Size = 6477L,
                            Title = "burg_fantastic_concrete_bike.rmvb",
                            UpdatedOn = new DateTime(2020, 4, 23, 20, 4, 3, 728, DateTimeKind.Local).AddTicks(886)
                        },
                        new
                        {
                            Id = 18,
                            Amount = 0m,
                            Author = "Wyatt Watsica",
                            CreatedOn = new DateTime(2020, 2, 4, 17, 39, 49, 834, DateTimeKind.Local).AddTicks(1983),
                            Description = "Voluptatem placeat laudantium repellat.",
                            DocumentType = "Excel",
                            Size = 937L,
                            Title = "action_items_face_to_face.fly",
                            UpdatedOn = new DateTime(2020, 4, 24, 4, 4, 53, 832, DateTimeKind.Local).AddTicks(26)
                        },
                        new
                        {
                            Id = 19,
                            Amount = 0m,
                            Author = "Cordie Pollich",
                            CreatedOn = new DateTime(2020, 3, 21, 16, 19, 54, 733, DateTimeKind.Local).AddTicks(2196),
                            Description = "Voluptatum officia qui.",
                            DocumentType = "CSV",
                            Size = 6857L,
                            Title = "buckinghamshire.gim",
                            UpdatedOn = new DateTime(2020, 4, 23, 13, 3, 51, 440, DateTimeKind.Local).AddTicks(6332)
                        },
                        new
                        {
                            Id = 20,
                            Amount = 0m,
                            Author = "Sigrid Cronin",
                            CreatedOn = new DateTime(2020, 1, 14, 22, 19, 33, 774, DateTimeKind.Local).AddTicks(7285),
                            Description = "Hic ipsam tempora rem.",
                            DocumentType = "Excel",
                            Size = 2179L,
                            Title = "xss_orchestrator.tiff",
                            UpdatedOn = new DateTime(2020, 4, 23, 9, 3, 7, 905, DateTimeKind.Local).AddTicks(734)
                        });
                });

            modelBuilder.Entity("MyOrange.Models.DocumentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.ToTable("DocumentDetails");
                });

            modelBuilder.Entity("MyOrange.Models.Document", b =>
                {
                    b.HasOne("MyOrange.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("MyOrange.Models.DocumentDetail", b =>
                {
                    b.HasOne("MyOrange.Models.Document", null)
                        .WithMany("Details")
                        .HasForeignKey("DocumentId");
                });
#pragma warning restore 612, 618
        }
    }
}
